# ==================================================
# COMET DEVOPS PLATFORM - Environment Configuration
# ==================================================
# Copy this file to .env and update with actual values
# NEVER commit .env files to version control!
# ==================================================

# ===== APPLICATION =====
NODE_ENV=development
PORT=8000

# ===== DATABASE =====
DATABASE_URL="postgresql://comet_user:password@localhost:5432/comet_dev"
DATABASE_POOL_MIN=2
DATABASE_POOL_MAX=10

# ===== REDIS =====
REDIS_ENABLED=true
REDIS_URL="redis://localhost:6379"

# ===== SECURITY (Generate: openssl rand -hex 32) =====
JWT_SECRET="GENERATE_SECURE_RANDOM_SECRET_32_CHARS"
JWT_REFRESH_SECRET="GENERATE_DIFFERENT_RANDOM_SECRET_32_CHARS"
JWT_EXPIRES_IN="24h"
JWT_REFRESH_EXPIRES_IN="7d"
ENCRYPTION_KEY="GENERATE_ENCRYPTION_KEY_32_CHARS"
CSRF_SECRET="GENERATE_CSRF_SECRET_64_CHARS"

# ===== CORS =====
ALLOWED_ORIGINS="http://localhost:3000,http://localhost:3030"

# ===== LOGGING =====
LOG_LEVEL=info
LOG_FORMAT=json

# ===== MONITORING & ERROR TRACKING =====
# Sentry.io - Error tracking and performance monitoring
# Get your DSN from: https://sentry.io/settings/[org]/projects/[project]/keys/
SENTRY_DSN=""
SENTRY_RELEASE=""  # Optional: Set to git commit SHA or version (e.g., v1.2.3)
SENTRY_ENVIRONMENT="development"  # development, staging, production

# New Relic (Optional)
NEW_RELIC_LICENSE_KEY=""

# ===== DISTRIBUTED TRACING (OpenTelemetry) =====
# Enable/disable tracing
OTEL_ENABLED=true

# Service identification
OTEL_SERVICE_NAME="golive-api-gateway"

# Exporter type: jaeger, zipkin, otlp, console
OTEL_EXPORTER="jaeger"

# Jaeger endpoint (default for docker-compose.tracing.yml)
JAEGER_ENDPOINT="http://localhost:14268/api/traces"

# Zipkin endpoint (alternative)
ZIPKIN_ENDPOINT="http://localhost:9411/api/v2/spans"

# OTLP endpoint (OpenTelemetry Protocol - alternative)
OTEL_EXPORTER_OTLP_ENDPOINT="http://localhost:4318/v1/traces"

# ===== MICROSERVICES =====
PIPELINE_SERVICE_URL="http://localhost:8001"
TESTING_SERVICE_URL="http://localhost:8002"
AI_SERVICES_URL="http://localhost:9000"

# ===== SECRETS MANAGEMENT =====
# Provider: env (environment variables), aws (AWS Secrets Manager), vault (HashiCorp Vault)
SECRETS_PROVIDER="env"

# AWS Secrets Manager configuration (if using AWS)
AWS_REGION="us-east-1"
AWS_ACCESS_KEY_ID=""
AWS_SECRET_ACCESS_KEY=""

# Secrets caching
SECRETS_CACHE_ENABLED=true
SECRETS_CACHE_TTL=300000  # 5 minutes in milliseconds

# ===== FEATURE FLAGS =====
ENABLE_DEMO_MODE=false
ENABLE_AI_TEST_GENERATION=true
